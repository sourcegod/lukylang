# Changelog for Luky project
# Author: Coolbrother
# Date: samedi, 24/08/2019
Last update: Sun, 13/12/2020

# Version 0.33.0: random
Date: Sun, 13/12/2020
# dev_0.32.12: Native random
-- Adding native random function, to generate randomize number.
-- Added files: native_random.luk in examples and tests directories.


# dev_0.32.11: Native str
-- Adding native str function, to convert any object to string.
-- Added files: native_str.luk in examples and tests directories.
-- Added LukObject::stripZeros function, 
to deleting trailing zeros when convert double number to string.

# dev_0.32.10: Native double
-- Adding native double function, to convert any object to double.
-- Added files: native_double.luk in examples and tests directories.

# dev_0.32.9: Native int
-- Adding native int function, to convert any object to int.
-- Added files: native_int.luk in examples and tests directories.

# Version dev_0.32.8: Default Keyword
-- Adding Default Keyword or default argument in function call like println.
-- Added default keywords support in Parser::finishCall function.
-- Added virtual setKeywords function and default keyword support in PrintLn class.
-- Fixed bugs in Scanner::addString function.
-- Added files: default_keyword.luk in examples and tests directories.

# dev_0.32.7: String Interpolation
-- Adding String Interpolation support.
-- Adding isIdent, isExpr, synchronize functions, in Scanner class.
-- Adding getIdent, getExpr functions, in Scanner class.
-- Adding getPart, isStartIdent, isStartExpr functions, in Scanner class. 
-- Changed Scanner::string to Scanner::addString, and factorized Scanner::addString function.
-- Added files: mis_string_interpolation.luk in tests and examples directories.
-- Added escape sequences for \$, \{, \}, in Scanner::unescape, Scanner::addString functions.

# dev_0.32.6: do-while
-- Adding do-while support.
-- Fixed bugs for compound assignment operators in Interpreter::visitAssignExpr function.
-- Adding files: loop_do_while.luk in examples and tests directories

# dev_0.32.5: metaclass
-- Adding metaclass or static class method support.
-- Adding files: class_metaclass.luk in examples and tests directories.
-- Now, LukClass is derived from LukInstance and LukCallable objects.

# 0.32.4: Static Class Variable 
-- Adding Parser::multiVars function, static variable into class statement in
Parser::classDeclaration functions, Resolver and Interpreter classes.
-- Adding multivars params into classStmt constructor, in file: stmt.hpp
-- Added files: class_static_variable.luk in examples and tests directories.

# dev_0.32.3: Load file in REPL
-- Added Load File feature for the REPL, in file: main.cpp
-- Added files: abs.luk, gcd.luk in examples directory
-- Added file: pcm.luk in examples directory.

# dev_0.32.2: multi variable declaration
-- Adding multi-variable declaration support.
-- Added files: var_1.luk, var_2.luk and var_multi.luk in tests directory.


# dev_0.32.1: Function and Lambda arrow
-- Added support for lambda and function arrow with (=>) Token type.
-- Added Scanner::logTokens and Scanner::insertToken functions
-- Fixed bugs in Scanner class for Automatic Semicolon Insertion.
-- Fixed bugs in Parser::varDeclaration function, for Automatic Semicolon
Insertion.
-- Added files: func_count_three.luk in examples and tests directories.
--  Added files: func_lambda_arrow.luk in examples and tests directories.
-- Added files: func_var_lambda.luk in examples and tests directories.

# dev_0.32.0: println and readln
-- Added file: notes/todo.txt
-- Updated file: README.md
-- Added file: lukman.sh for building, running, debugging, testing, luky
app. 
-- Removed file: utils/run_test.sh
-- Added file: examples/99_bottles_of_beer.luk.

#--------------------------------------------------------------------------------

# Version 0.32.0: println and readln
Date: Wed, 30/09/2020
-- Added file: notes/todo.txt
-- Updated file: README.md
-- Added file: lukman.sh for building, running, debugging, testing, luky
app. 
-- Removed file: utils/run_test.sh
-- Added file: examples/99_bottles_of_beer.luk.


#--------------------------------------------------------------------------------

#  Version 0.31.0: All operators
Date: dimanche, 20/09/2020
-- Adding: bitwise operators, bitwise assignment, string comparison.


## dev_0.31.1: Escape sequences
-- Adding escape sequences characters for string type.
-- Adding simple and double quotes support for  string type.

## dev_0.31.2: Automatic Semicolon Insertion
-- Adding automatic semicolon insertion in Scanner and Parser class.
-- Adding functions: isPrintable and searchPrintable in Scanner class.
-- Adding functions: checkEndLine in Parser class.
-- Adding files: misc_no_semicolon.luk in examples and tests directories.

## dev_0.31.3: Variable inused
-- Adding support to detect variable inused in the Resolver class.
-- Adding Variable class and VarState enumeration, in the Resolver class.
-- Changed signature of resolveLocal function, to take advantage of variable
state in Resolver class.

-- Adding file: misc_variable_inused.luk in tests directory.


## dev_0.31.4: Native println
-- Adding native println function.
-- Adding src/builtin_func header file src/builtins directory to regroup
native functions.

-- Adding support for variadic function, inInterpreter::visitCallExpr function.
-- Fixed bug in Parser::finishCall function, calling the assignment
function rather the expression, to avoid the comma operator.

-- Adding files: native_clock.luk, native_println.luk in examples and tests
directories.


## dev_0.31.5: Native readln
-- Adding native readln  function.
-- Fixed bug in Resolver::endScope function, to remove scope properly in the
m_scopes vector.

-- Adding script utils/run_test.sh for running test files.
-- Added file: src/builtins/readln_func.hpp for ReadlnFunc class,
native_readln.luk in examples and tests directories,
perf_fibonacci.luk in tests directory,
run_test.sh in utils directory.


#--------------------------------------------------------------------------------

## dev_0.30.5: Comma operator
Adding: Comma operator
Fixed bug in LukObject::Operator/= when the result of division between
two integers is double.
Adding files: operator_comma.luk in examples and tests directories.

## dev_0.30.4: prefix and postfix operators
-- Adding: prefix and postfix operators.
Added files: operator_prefix_postfix_simple.luk and
operator_prefix_postfix_loop.luk in examples and tests directories.

-- Adding: refactoring compound assignment to use only visitassign class.
-- Adding: multiply and *= operator for string.

## dev_0.30.3: bitwise operators
Adding: bitwise operators, bitwise assignment, string comparison.
Adding: modulus, Exponent, bitwise shift operators
Refactoring precedence order operations.
Added files: operator_bitwise_shift.luk in examples and tests directories.
Added files: modulus.luk in examples and tests directories.

-- Refactoring modulus, and bitwise operators to keep precedence order.
-- Adding Compound Assign Operators part 2 with bitwise operators:
|=, &=, ^=, <<=, >>=,
and ~ "bitwise not".
Adding files: is_event.luk and operator_bitwise.luk, in examples and
tests directories.

## dev_0.30.2: ternary expression
-- Adding ternary expression.
-- Added files: condition_ternary.luk in examples and tests directories.

## dev_0.30.1: exp operator
-- Adding exp and exp_equal operators
-- Added files: operator_exp.luk in examples and tests directories.
-- Added files: compound_assignment.luk in examples and tests directories.

## dev_0.30.1: int and double
-- Added support for Int and Double Token type, in LukObject class.
and manage Integer and Double in the Interpreter.

-- Added LukError class in Interpreter constructor.

#--------------------------------------------------------------------------------


# Version 0.30.0: Compound Assign Operators part 1
Date: mardi, 01/09/2020
-- Adding compound assign operators part 1 wit operators:
+unary operator, +=, -=, *=, /=, %, %= 
-- Adding compoundAssignment function in the parser.
-- Adding format, multiplyString function to manage string concatenation, and
string multiplier.

#--------------------------------------------------------------------------------

# Version 0.29: Nested Multiline Comments
Date: dimanche, 30/08/2020
-- Adding nested multiline comments in Scanner class.
-- Adding files: multiline_comments.luk in examples and tests directories.
-- Refactorizing functions in file: main.cpp.

#--------------------------------------------------------------------------------

# Version 0.28: Lambda Function
Date: jeudi, 27/08/2020
-- Adding common.hpp file to regouping aliases types.
-- Adding checkNext function in the parser. 
-- Adding lambda function with parameters.
-- Adding example and test files for lambda.
-- Fixed bugs in the REPL that causing crashes when objects are not yet initialized.
-- Optimizing all constructors classes in Expr and Stmt objects, to make
variables initializer lists, instead variables assignment in the constructor
function.
-- Adding inused template function for inused parameters.

#--------------------------------------------------------------------------------

# Version 0.27: optimization 1
Date: vendredi, 21/08/2020
-- Updating file: README.md for reflecting changes until superclass features.
-- Changes most LukObject return-type to LukObject pointer for better
performance.
-- Changes most Token objects to Token pointers for better performance.
-- Adding examples files to the examples directory.
-- Adding tests files to the tests directory.
-- Adding: notes to the file: notes.txt
-- Adding file grammar.txt for rules until superclass to the notes directory.

#--------------------------------------------------------------------------------

# Version 0.26: superclass
Date: dimanche, 02/08/2020
-- Adding: inheritance, superclas implementation, and superclass environment
object.
-- Adding: test files about class objects.
-- Adding: test files about superclass objects.

#--------------------------------------------------------------------------------

# Version 0.25: class
Date: mardi, 28/07/2020
-- Adding: class, constructor, this, getter and setter objects.
-- Changing unique_ptr to shared_ptr for all objects.
-- Fixing bug in the REPL when calling user defined function.
This bug has been resolved to passing FunctionStmt class as shared_ptr pointer 
instead raw pointer.
-- Adding: tests files about classes objects.
-- Adding: notes file about use of C++, best practice of C++, and notes about Luky
classes, functions etc...
-- Adding: logType function in the logger object, to debugging the type of class
or primitive type.
-- Adding: logState function in the interpreter object, to print out and debugging 
the environment state.

#--------------------------------------------------------------------------------

# Version 0.24: resolver
Date: jeudi, 18/06/2020
Adding: Resolver object
Adding: ostream operator to print Token object. 
Adding: tests directory with test's files.
Issue: Bug in the REPL when calling function.

#--------------------------------------------------------------------------------

# Version 0.23: closure
Date: samedi, 09/05/2020
Adding: closure feature for functions.
Fixing bugs: environment object, stringify function.

#--------------------------------------------------------------------------------

# Version 0.22: logger 2
Date: mercredi, 06/05/2020
Adding: CLog object, improving logger functions, 
Adding: scons sconstruct file.

#--------------------------------------------------------------------------------

# Version 0.21: Tracer and logger.
Date: jeudi, 02/04/2020
-- Adding: option "debug" to MakeFile file.
-- Tracer, logger, debugging, to Environment, inperpreter, lukfunction files.

#--------------------------------------------------------------------------------

# Version 0.20: Function Return
Date: mardi, 17/12/19
-- Adding: Return object, return function.
-- Correctifs for executeblock in Interpreter object, to catch all exceptions.

#--------------------------------------------------------------------------------

# Version 0.19: Function Declaration
Date: mercredi, 11/12/19
-- Adding: LukFunction, FunctionStmt object.
Note: C++11 can only store polymorphic or derived class with pointers or smart
pointers in container like vector or unordered_map.
Otherwise, derived object will be slicing.
It took me more one month to realize this, and fixe this bug in LukFunction
object.

#--------------------------------------------------------------------------------

# Version 0.18: Function Native
# Date: mardi, 22/10/19
-- Adding: Callable object, ClockFunc object as clock as internal function.

#--------------------------------------------------------------------------------

# Version 0.17: Function Call
# Date: mardi, 15/10/19
-- Adding: CallExpr, visitCallExpr

#--------------------------------------------------------------------------------

# Version 0.16: Break Statement
# Date: samedi, 12/10/19
-- Adding: Break and continue statement,
Jump object.

#--------------------------------------------------------------------------------

# Version 0.15: Loop Statement
# Date: lundi, 30/09/19
-- Adding: while, for statement.

#--------------------------------------------------------------------------------

# Version 0.14: If Statement
# Date: vendredi, 27/09/19
-- Adding: If statement, Logical Expression,
logicOr, logicAnd expression.

#--------------------------------------------------------------------------------

# Version 0.13: Block
# Date: mardi, 24/09/19
-- Adding: block statement

#------------------------------------------------------------

# Version 0.12 Calculator
# Date: dimanche, 08/09/19
-- Fixe bugs in scanner and lukobject to handle string literal.
-- Printing last expression result in the interpreter.
-- Adding: debug option in the makefile.

#------------------------------------------------------------

# Version 0.11 variable and environment
# Date: jeudi, 05/09/19
-- Adding: variable support, environment object.

#--------------------------------------------------------------------------------

# Version 0.10 runcommand
# Date: dimanche, 01/09/19
-- Adding: runcommand for passing code in commandline
unique id for lukobject.

#--------------------------------------------------------------------------------

# Version 0.9 Statement
# Date: mardi, 27/08/19
-- Adding: Statement object, print statement.

#--------------------------------------------------------------------------------

# Version 0.8 Expression
# Date: dimanche, 25/08/19
-- Refactoring, and cleanup warnings.

#--------------------------------------------------------------------------------

# Version 0.7 Comparison operators
#Date: samedi, 24/08/19
-- Adding comparison operators, RuntimeError object

#--------------------------------------------------------------------------------

# Version 0.6 Arithmetic operators
# Date: 19/08/2019
-- Adding: Arithmetic operators

#--------------------------------------------------------------------------------

# Version 0.5 Interpreter
# Date: 19/08/2019
-- Adding: Interpreter

#--------------------------------------------------------------------------------

# Version 0.4 AstPrinter
# Date: 10/08/2019
-- Adding: AstPrinter object

#--------------------------------------------------------------------------------

# Version 0.3 Parser
# Date: 10/08/2019
-- Adding: Parser, lukobject objects

#--------------------------------------------------------------------------------

# Version 0.2 Scanner
# Date: 26/07/2019
-- Adding: Scanner, error_handler objects

#--------------------------------------------------------------------------------

# Version 0.1 Main
# Date: 26/07/2019
-- Adding: main, token, error_handler objects.

#--------------------------------------------------------------------------------

